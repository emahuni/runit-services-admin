#!/data/data/com.termux/files/usr/bin/bash
# Emmanuel Mahuni (c) 2008 MIT
#

function printHelp {
		echo "$(basename $0) - run all active services in the SVDIR using runsvdir: SVDIR (default: \$HOME/.sv)"
		echo
		echo "Usage $(basename $0) [-b|-f] [m]"
		echo " - b: for running in background (default)."
		echo " - f: for running it in foreground. This is generally for testing."
		echo " - m: monitor and start any new services in the SVDIR."
		echo " - h | --help: display this help screen."
		echo
		echo "Command exits all services started by this command and runs as discribed above."
}

# if [ ( $1 -eq "--help" )  ||  ( $# -g 2 ) ]; then printHelp; exit 1; fi

# echo service: $service

# check the kind of run we want done
while getopts ":fmh" opt
do
		case $opt in
				m) monitor=1;;
				f) export fg="1";; #echo 'in fg mode';;
				*) help=true;;
		esac
done
shift $(($OPTIND - 1))

if [ ! -z $help ]; then printHelp; exit 1; fi

# set the default services dir
if [ -z "$SVDIR" ]; then SVDIR=$HOME/.sv; fi

# see if the services dir has active services defined (active are non-dot dirs)
services=($SVDIR/*) # create array of SVDIR subdirs
# check if the array has a length of > 0
if [ ${#services[*]} -gt 0 ]; then
		# stop previous runsvdir and all services and clean their dirs of supervise
		$(dirname $0)/svdstop

		sleep 1

		echo "Starting enabled services in $SVDIR/ ..."

		if [ $monitor ]; then
				if [ $fg ]; then
						runsvdir $SVDIR
				else
						runsvdir $SVDIR >>$SVDIR/.runsvdir.log & #
				fi

				# capture the pid so we know our runsvdir instance
				$! > $SVDIR/.runsvdir.pid
		else
				rm -f $SVDIR/.runsv.log
				for s in ${services[*]}; do
						echo starting service: $(basename $s) ...

						if [ $fg ]; then
								runsv $s
						else
								runsv $s >>$SVDIR/.runsv.log & #
						fi
				done
		fi

		echo "${#services[*]} services started successfully!"
else
		echo "There is no services in active services dir. ";
		exit 2;
fi
