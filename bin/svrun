#!/bin/bash
# Emmanuel Mahuni (c) 2018 MIT
#

function printHelp {
		echo "$(basename $0) - run a service installed in the SVDIR (default: \$HOME/.sv)"
		echo
		echo "Usage $(basename $0) [-b|-f] service"
		echo " service: name of the service to run from the SVDIR"
		echo " -b: run as a background process (default)"
		echo " -f: run as a foreground process, generally for testing"
		echo " -r: restart service if it is running"
}

if ( [ $# -lt 1 ] ) || ( [ $1 == "--help" ] ) ||  ( [ $1 == "-h" ] ) ; then printHelp; exit 1; fi

case $# in
		1) service=$1;;
		2) service=$2;;
		*) printHelp; exit 1;;
esac

# echo service: $service

# check the kind of run we want done
while getopts ":fbr" opt
do
		case $opt in
				f) export fg="1";; #echo 'in fg mode';;
				b) export fg="0";; # echo 'in bg mode'; ;;
				r) rstsv=1;;
		esac
done
shift $(($OPTIND - 1))


# set the default services dir
if [ -z "$SVDIR" ]; then export SVDIR=$HOME/.sv; fi

# see if the service is defined in the svdir
if [ -d "$SVDIR/$service" ]; then
		# check if the status of the service can be queried
		status=$(sv status $service)
		# echo "status: $status"
		if [[ $status == *"down"* ]]; then
				# the service was taken down normally so we need to take it up graciously
				echo "Taking service up, it was down..."
				sv up $service
		elif ( [[ $status != *"run:"* ]] ) || ( [ ! -z $rstsv ] ); then
				if [ ! -z $rstsv ]; then
						$(dirname $0)/svstop $service
						sleep 1
				else
						# the status is something else probably a warning.
						# remove the supervise dir if it exists
						if [ -d "$SVDIR/$service/supervise" ]; then rm -rf "$SVDIR/$service/supervise"; fi
				fi

				echo "Starting service $SVDIR/$service..."

				if [ $fg ]; then
						runsv "$SVDIR/$1"
				else
						runsv "$SVDIR/$1" >/dev/null & #
				fi
		else
				echo "Service $service already running."
		fi
else
		echo "Service $service isn't defined in '$SVDIR'"
		exit 2
fi
